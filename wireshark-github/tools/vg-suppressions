# This file lists suppressions to hide valgrind errors in libraries we don't
# control. Be careful adding to it, since overly-broad suppressions may hide
# real errors in Wireshark!
#
# This is primarily targeted towards the set of libraries on the fuzz-bot (which
# runs a valgrind step) but other entries are welcome as long as they are
# sufficiently commented.
{
   Remove uninitialised CPU condition code check for ws_cpuid_sse42() on Virtualbox
   Memcheck:Cond
   fun:ws_mempbrk_sse42_compile
   ...
   fun:register_all_protocols
   fun:proto_init
   fun:epan_init
   fun:main
}

{
   Libgcrypt leak (gcry_control)
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:gcry_control
   fun:epan_init
   fun:main
}

{
   Libgcrypt leak (gcry_check_version)
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:epan_get_runtime_version_info
   fun:get_tshark_runtime_version_info
   fun:get_runtime_version_info
   fun:main
}

{
   Glib Leak (g_get_charset)
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:*alloc
   ...
   fun:g_get_charset
   fun:print_stream_text_alloc
   ...
}

{
   Glib leak (g_get_user_config_dir)
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:g_get_user_config_dir
   ...
}

{
   Glib leak (g_module)
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:g_module_*
   ...
}

{
   Glib leak (g_private_get) - requires glib debugging symbols installed
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   ...
   fun:g_private_get
}

{
   Glib leak (g_log)
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:g_malloc
   ...
   fun:g_log_set_handler_full
}

{
   Libc leak (dl_init)
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:*alloc
   ...
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
}
