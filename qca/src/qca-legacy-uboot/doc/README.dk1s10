
			 Nios Development Kit
			   Startix Editions

		    Last Update: January 28, 2004
====================================================================

This file contains information regarding U-Boot and the Altera
Nios Development Kit, Startix Edition (DK-1S10). For general Nios
information see doc/README.nios.

Most stuff of this file was borrowed and based on README.dk1c20,
the DK-1C20 related information file.

For those interested in contributing ... see HELP WANTED section
in doc/README.nios.

Contents:

	1. Files
	2. Memory Organization
	3. CPU Variations
	4. Examples
	5. Programming U-Boot into FLASH with GERMS

====================================================================

1. Files
=========
	board/altera/dk1s10/*
	include/configs/DK1S10.h

2. Memory Organization
=======================

	-The heap is placed below the monitor (U-Boot code).
	-Global data is placed below the heap.
	-The stack is placed below global data (&grows down).

3. CPU Variations
=================

There are more than one NIOS CPU variation for the DK-1S10. U-Boot
supports the following CPU configurations:

	- Altera Standard 32 (make DK1S10_standard_32_config)
	- Microtronix LDK 2.0 (make DK1S10_mtx_ldk_20_config)

4. Examples
============

The hello_world example was never tested on DK-1S10. Neverthelse
it should work as far as possible, because the DK-1S10 port is
more than ninetieth percents equal to the DK-1C20 port and at
this platform the hello_world example was already tested
successfully (see README.dk1c20).


5. Programming U-Boot into FLASH with GERMS
============================================
The current version of the DK-1S10 port with the default
configuration settings occupies about 78 KBytes of flash.
A minimal configuration occupies less than 60 KByte
(network support disabled).

To program U-Boot into the DK-1S10 flash using GERMS do the
following:

1. From the command line, download U-Boot using the nios-run:

	$ nios-run -r u-boot.srec

This takes about 45 seconds (GERMS is not very speedy here).
After u-boot is downloaded it will be executed. You should
see the following:

    U-Boot 1.0.2 (Jan 28 2004 - 19:02:30)

    CPU: Nios-32 Rev. 3.3 (0x3038)
    Reg file size: 256 LO_LIMIT/HI_LIMIT: 2/14
    Board: Altera Nios 1S10 Development Kit
    In:    serial
    Out:   serial
    Err:   serial
    DK1S10 >


2. Quit nios-run and start your terminal application (e.g. start
   Hyperterminal or minicom).

3. Download the u-boot code to RAM. When using Hyperterminal, do the
   following:

   a. From the u-boot command prompt start a binary download to
      SRAM / SDRAM:

      at the Altera Standard 32 to SRAM:

	==> loadb 800000

      at the Microtronix LDK 2.0 to SDRAM:

	==> loadb 1010000

   b. Download u-boot.bin using kermit.

4. From the U-Boot command prompt, erase flash:

   at the Altera Standard 32 from 0x40000 to 0x5ffff:

	==> erase 1:4-5

   at the Microtronix LDK 2.0 from 0x8000000 to 0x81ffff:

	==> erase 1:0-1

5. Copy the binary image from SRAM / SDRAM to flash:

   at the Altera Standard 32 to SRAM:

	==> cp.b 800000 40000 ${filesize}

   at the Microtronix LDK 2.0 to SDRAM:

	==> cp.b 1010000 8000000 ${filesize}

U-Boot will now automatically start when the board is powered on or
reset using the Standard-32 configuration. To start U-Boot with the
Safe-32 configuration, enter the following GERMS command:

    + g 40000
