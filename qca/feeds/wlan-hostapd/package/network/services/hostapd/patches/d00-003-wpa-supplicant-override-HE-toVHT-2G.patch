--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -1195,6 +1195,12 @@ struct wpa_driver_associate_params {
 	 * fils_erp_rrk_len - Length of fils_erp_rrk in bytes
 	 */
 	size_t fils_erp_rrk_len;
+#ifdef CONFIG_HE_OVERRIDES
+	/**
+ 	* Disable HE for this connection
+ 	*/
+	int disable_he;
+#endif /* CONFIG_HE_OVERRIDES */
 };
 
 enum hide_ssid {
--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -2741,6 +2741,9 @@ static const struct parse_data ssid_fiel
 	{ INT_RANGE(owe_ptk_workaround, 0, 1) },
 	{ INT_RANGE(multi_ap_backhaul_sta, 0, 1) },
 	{ INT_RANGE(ft_eap_pmksa_caching, 0, 1) },
+#ifdef CONFIG_HE_OVERRIDES
+	{ INT_RANGE(disable_he,0,1)},
+#endif
 	{ INT_RANGE(beacon_prot, 0, 1) },
 	{ INT_RANGE(transition_disable, 0, 255) },
 	{ INT_RANGE(sae_pk, 0, 2) },
--- a/wpa_supplicant/config_ssid.h
+++ b/wpa_supplicant/config_ssid.h
@@ -1104,7 +1104,12 @@ struct wpa_ssid {
 	 * FT initial mobility domain association.
 	 */
 	int ft_eap_pmksa_caching;
-
+#ifdef CONFIG_HE_OVERRIDES
+        /**
+         * Disable HE for this connection
+         */
+	int disable_he;
+#endif  /* CONFIG_HE_OVERRIDES */
 	/**
 	 * beacon_prot - Whether Beacon protection is enabled
 	 *
--- a/wpa_supplicant/wpa_cli.c
+++ b/wpa_supplicant/wpa_cli.c
@@ -1480,6 +1480,9 @@ static const char *network_fields[] = {
 	"update_identifier",
 #endif /* CONFIG_HS20 */
 	"mac_addr", "pbss", "wps_disabled"
+#ifdef CONFIG_HE_OVERRIDES
+	"disable_he"
+#endif /* CONFIG_HE_OVERRIDES */
 };
 
 
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -2423,17 +2423,17 @@ void ibss_mesh_setup_freq(struct wpa_sup
 		return;
 
 	/* Allow HE on 2.4 GHz without VHT: see nl80211_put_freq_params() */
+#ifdef CONFIG_HE_OVERRIDES
+	if (is_24ghz) {
+		if (ssid->disable_he)
+			freq->he_enabled = 0;
+		else
+			freq->he_enabled = mode->he_capab[ieee80211_mode].he_supported;
+#else
 	if (is_24ghz)
 		freq->he_enabled = mode->he_capab[ieee80211_mode].he_supported;
-#ifdef CONFIG_HE_OVERRIDES
-	if (is_24ghz && ssid->disable_he)
-		freq->he_enabled = 0;
 #endif /* CONFIG_HE_OVERRIDES */
 
-	/* Setup higher BW only for 5 GHz */
-	if (mode->mode != HOSTAPD_MODE_IEEE80211A)
-		return;
-
 	for (chan_idx = 0; chan_idx < mode->num_channels; chan_idx++) {
 		pri_chan = &mode->channels[chan_idx];
 		if (pri_chan->chan == channel)
@@ -2522,6 +2522,11 @@ void ibss_mesh_setup_freq(struct wpa_sup
 
 		wpa_scan_results_free(scan_res);
 	}
+#ifdef CONFIG_HE_OVERRIDES
+skip_vht80:
+	if (ssid->disable_he)
+		vht_freq.he_enabled = 0;
+#endif /* CONFIG_HE_OVERRIDES */
 
 #ifdef CONFIG_HT_OVERRIDES
 skip_ht40:
@@ -2554,6 +2559,11 @@ skip_ht40:
 	/* Enable HE with VHT for 5 GHz */
 	freq->he_enabled = mode->he_capab[ieee80211_mode].he_supported;
 
+#ifdef CONFIG_HE_OVERRIDES
+	if (is_24ghz)
+		goto skip_vht80;
+#endif /* CONFIG_HE_OVERRIDES */
+
 	/* setup center_freq1, bandwidth */
 	for (j = 0; j < ARRAY_SIZE(vht80); j++) {
 		if (freq->channel >= vht80[j] &&
