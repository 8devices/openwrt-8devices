From b6579f96e463fe0c1e29fe84af8c76a5c1ebb7a4 Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Mon, 28 Jun 2021 13:30:29 -0700
Subject: [PATCH 03/23] eht: configuration options to enable/disable the
 support

Add compilation for flag 802.11be along with options to enable
EHT support per radio and disable_per interface.

Enabling HE is mandatory to enable EHT mode.

Tested-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
---
 hostapd/Makefile      |  4 ++++
 hostapd/config_file.c |  6 ++++++
 hostapd/hostapd.conf  | 10 ++++++++++
 src/ap/ap_config.c    | 17 +++++++++++++++++
 src/ap/ap_config.h    |  3 +++
 5 files changed, 40 insertions(+)

--- a/hostapd/Makefile
+++ b/hostapd/Makefile
@@ -349,6 +349,10 @@ CFLAGS += -DCONFIG_IEEE80211AX
 OBJS += ../src/ap/ieee802_11_he.o
 endif
 
+ifdef CONFIG_IEEE80211BE
+CFLAGS += -DCONFIG_IEEE80211BE
+endif
+
 ifdef CONFIG_MBO
 CFLAGS += -DCONFIG_MBO
 OBJS += ../src/ap/mbo_ap.o
--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -4622,6 +4622,8 @@ static int hostapd_config_fill(struct ho
 		bss->disable_11ac = !!atoi(pos);
 	} else if (os_strcmp(buf, "disable_11ax") == 0) {
 		bss->disable_11ax = !!atoi(pos);
+	} else if (os_strcmp(buf, "disable_11be") == 0) {
+		bss->disable_11be = !!atoi(pos);
 	} else if (os_strcmp(buf, "beacon_tx_mode") == 0) {
 		int val = atoi(pos);
 
@@ -4662,6 +4664,10 @@ static int hostapd_config_fill(struct ho
 		conf->mbssid = atoi(pos);
 	} else if (os_strcmp(buf, "ema") == 0) {
 		conf->ema = atoi(pos);
+#ifdef CONFIG_IEEE80211BE
+	} else if (os_strcmp(buf, "ieee80211be") == 0) {
+		conf->ieee80211be = atoi(pos);
+#endif /* CONFIG_IEEE80211BE */
 	} else {
 		wpa_printf(MSG_ERROR,
 			   "Line %d: unknown configuration item '%s'",
--- a/hostapd/hostapd.conf
+++ b/hostapd/hostapd.conf
@@ -996,6 +996,16 @@ wmm_ac_vo_acm=0
 # 1 = Enabled
 #ema=0
 
+##### IEEE 802.11be related configuration #####################################
+
+#ieee80211be: Whether IEEE 802.11be (EHT) is enabled
+# 0 = disabled (default)
+# 1 = enabled
+#ieee80211be=1
+
+#disable_11be: Boolean (0/1) to disable EHT for a specific BSS
+#disable_11be=0
+
 ##### IEEE 802.1X-2004 related configuration ##################################
 
 # Require IEEE 802.1X authorization
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -1435,6 +1435,15 @@ static int hostapd_config_check_bss(stru
 	}
 #endif /* CONFIG_FILS */
 
+#ifdef CONFIG_IEEE80211BE
+	if (full_config && bss->disable_11be == false &&
+	    bss->disable_11ax == true) {
+		bss->disable_11be = true;
+		wpa_printf(MSG_ERROR,
+			   "Disabling IEEE 802.11be as IEEE 802.11ax is disabled for this BSS");
+	}
+#endif /* CONFIG_IEEE80211BE */
+
 	return 0;
 }
 
@@ -1508,6 +1517,14 @@ int hostapd_config_check(struct hostapd_
 		return -1;
 	}
 
+#ifdef CONFIG_IEEE80211BE
+	if (full_config && conf->ieee80211be && !conf->ieee80211ax) {
+		wpa_printf(MSG_ERROR,
+			   "Cannot set ieee80211be without ieee80211ax");
+		return -1;
+	}
+#endif /* CONFIG_IEEE80211BE */
+
 	for (i = 0; i < conf->num_bss; i++) {
 		if (hostapd_config_check_bss(conf->bss[i], conf, full_config))
 			return -1;
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -537,6 +537,7 @@ struct hostapd_bss_config {
 	bool disable_11n;
 	bool disable_11ac;
 	bool disable_11ax;
+	bool disable_11be;
 
 	/* IEEE 802.11v */
 	int time_advertisement;
@@ -1126,6 +1127,7 @@ struct hostapd_config {
 #endif /* CONFIG_AIRTIME_POLICY */
 	u8 mbssid;
 	u8 ema;
+	int ieee80211be;
 };
 
 static inline u8 hostapd_get_he_6ghz_reg_pwr_type(struct hostapd_config *conf)
