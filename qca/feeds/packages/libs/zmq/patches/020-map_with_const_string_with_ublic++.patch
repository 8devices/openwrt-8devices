--- a/src/metadata.hpp
+++ b/src/metadata.hpp
@@ -31,7 +31,7 @@ namespace zmq
     {
         public:
 
-            typedef std::map <std::string, const std::string> dict_t;
+            typedef std::map <std::string, std::string> dict_t;
 
             metadata_t (const dict_t &dict);
             virtual ~metadata_t ();
--- a/src/socket_base.cpp
+++ b/src/socket_base.cpp
@@ -20,6 +20,7 @@
 #include <new>
 #include <string>
 #include <algorithm>
+#include <ctype.h>
 
 #include "platform.hpp"
 
--- a/src/stream_engine.cpp
+++ b/src/stream_engine.cpp
@@ -198,7 +198,7 @@ void zmq::stream_engine_t::plug (io_thre
             //  Compile metadata.
             typedef metadata_t::dict_t properties_t;
             properties_t properties;
-            properties.insert(std::make_pair("Peer-Address", peer_address));
+            properties.insert(std::make_pair<std::string, std::string>("Peer-Address", peer_address));
             zmq_assert (metadata == NULL);
             metadata = new (std::nothrow) metadata_t (properties);
         }
@@ -805,7 +805,7 @@ void zmq::stream_engine_t::mechanism_rea
 
     //  If we have a peer_address, add it to metadata
     if (!peer_address.empty()) {
-        properties.insert(std::make_pair("Peer-Address", peer_address));
+        properties.insert(std::make_pair<std::string, std::string>("Peer-Address", peer_address));
     }
 
     //  Add ZAP properties.
