--- a/ap.c
+++ b/ap.c
@@ -6912,6 +6912,17 @@ static int ap_set_60g_ese(struct sigma_d
 	}
 }
 
+static int mac80211_get_mac_id(const char *ifname)
+{
+	if (strcmp(ifname, "wlan0") == 0)
+		return 0;
+	else if (strcmp(ifname, "wlan1") == 0)
+		return 1;
+	else if (strcmp(ifname, "wlan2") == 0)
+		return 2;
+	else
+		return -1;
+}
 
 static int ap_set_force_mcs(struct sigma_dut *dut, int force, int mcs)
 {
@@ -7998,6 +8009,35 @@ skip_key_mgmt:
 			fprintf(f, "he_rts_threshold=0");
 	}
 
+	if (drv == DRIVER_MAC80211 && dut->program == PROGRAM_HE) {
+
+		int mac_id;
+
+		mac_id = mac80211_get_mac_id(ifname);
+		if (mac_id >= 0) {
+			snprintf(buf, sizeof(buf), "echo 0 0 0 0 > /sys/kernel/debug/ath11k/ipq8074/mac%d/rate_mask",
+				 mac_id);
+			if (system(buf) != 0)
+				sigma_dut_print(dut, DUT_MSG_INFO, "Failed to run '%s'", buf);
+		} else {
+			sigma_dut_print(dut, DUT_MSG_INFO, "Failed to set rate_mask");
+		}
+
+		if (strstr(dut->ap_ssid, "HE-4.37.1") != NULL) {
+			snprintf(buf, sizeof(buf),
+				 "echo 3 0x00C00C00 0x0C00C00C 0xC00C00C0 > /sys/kernel/debug/ath11k/ipq8074/mac%d/rate_mask", mac_id);
+			if (system(buf) != 0)
+				sigma_dut_print(dut, DUT_MSG_INFO, "Failed to run '%s'", buf);
+		}
+
+		if (strstr(dut->ap_ssid, "HE-4.36.1")) {
+			snprintf(buf, sizeof(buf),
+				 "echo 3 0x00F00F00 0x0F00F00F 0xF00F00F0 > /sys/kernel/debug/ath11k/ipq8074/mac%d/rate_mask", mac_id);
+			if (system(buf) != 0)
+				sigma_dut_print(dut, DUT_MSG_INFO, "Failed to run '%s'", buf);
+		}
+	}
+
 	if (dut->ap_key_mgmt == AP_WPA2_OWE && dut->ap_tag_ssid[0][0] &&
 	    dut->ap_tag_key_mgmt[0] == AP2_OPEN) {
 		/* OWE transition mode */
