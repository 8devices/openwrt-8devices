From 0fe4a7f57a44a0aaad6fb1d6861c9fb9597358a2 Mon Sep 17 00:00:00 2001
From: P Praneesh <ppranees@codeaurora.org>
Date: Tue, 15 Dec 2020 11:27:48 +0530
Subject: [PATCH] ath11k: optimizations in ath11k_dp_process_rx()

Incaludes below changes,
	1. Increment total_msdu_reaped only when continuation is not set and update
	drop flag correspondingly. This is to avoid additional access to ath11k_hal_srng_dst_num_free()
	2. Avoid descriptor memcpy as the data is prefetched already
	3. The Active Pdev and CAC check are done for each msdu in ath11k_dp_rx_process_received_packets
	Rather, collect all msdu's in a per mac msdu list, and pass to the function.
	4. Add branch predictors where required in the process rx()
	5. Remove usage of quota variable since we add only max napi budget msdus to the list
	6. Prefetch the initial descriptor part which is used by all the hw ops for msdu info collection.

	About 3-4% improvement on single radio UDP UL on single core was seen.
	More validation/confirmation on perf stats required.

Signed-off-by: Sriram R <srirrama@codeaurora.org>
Signed-off-by: P Praneesh <ppranees@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/dp_rx.c | 107 ++++++++++++++++----------------
 1 file changed, 55 insertions(+), 52 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -3184,7 +3184,7 @@ try_again:
 	 * head pointer so that we can reap complete MPDU in the current
 	 * rx processing.
 	 */
-	if (!done && ath11k_hal_srng_dst_num_free(ab, srng, true)) {
+	if (unlikely(!done && ath11k_hal_srng_dst_num_free(ab, srng, true))) {
 		ath11k_hal_srng_access_end(ab, srng);
 		goto try_again;
 	}
