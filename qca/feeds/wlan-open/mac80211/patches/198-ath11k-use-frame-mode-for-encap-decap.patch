--- a/drivers/net/wireless/ath/ath11k/core.c
+++ b/drivers/net/wireless/ath/ath11k/core.c
@@ -15,18 +15,14 @@
 #include "hif.h"
 
 unsigned int ath11k_debug_mask;
-unsigned int rawmode;
 unsigned int cryptmode;
 EXPORT_SYMBOL(ath11k_debug_mask);
-unsigned int ath11k_ethernet_mode = 1;
 module_param_named(debug_mask, ath11k_debug_mask, uint, 0644);
-module_param_named(rawmode, rawmode, uint, 0644);
 module_param_named(cryptmode, cryptmode, uint, 0644);
-module_param_named(ethernet_mode, ath11k_ethernet_mode, uint, 0644);
 MODULE_PARM_DESC(debug_mask, "Debugging mask");
 MODULE_PARM_DESC(cryptmode, "crypto mode: 0-hardware, 1-software");
-MODULE_PARM_DESC(rawmode, "RAW mode TX: 0-disable, 1-enable");
-MODULE_PARM_DESC(ethernet_mode, "Use ethernet frame datapath");
+
+extern unsigned int ath11k_frame_mode;
 
 static const struct ath11k_hw_params ath11k_hw_params[] = {
 	{
@@ -730,7 +726,7 @@ int ath11k_core_qmi_firmware_ready(struc
 		return -EINVAL;
 	}
 
-	if (rawmode)
+	if (ath11k_frame_mode == ATH11K_HW_TXRX_RAW)
 		set_bit(ATH11K_FLAG_RAW_MODE, &ab->dev_flags);
 
 	mutex_lock(&ab->core_lock);
@@ -986,11 +982,6 @@ int ath11k_core_pre_init(struct ath11k_b
 {
 	int ret;
 
-	if (ath11k_ethernet_mode && rawmode) {
-		ath11k_err(ab, "ethernet and raw mode cannot co-exist\n");
-		return -EINVAL;
-	}
-
 	ret = ath11k_init_hw_params(ab);
 	if (ret) {
 		ath11k_err(ab, "failed to get hw params: %d\n", ret);
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -17,8 +17,6 @@
 #include "peer.h"
 #include "vendor.h"
 
-extern unsigned int ath11k_ethernet_mode;
-
 #define CHAN2G(_channel, _freq, _flags) { \
 	.band                   = NL80211_BAND_2GHZ, \
 	.hw_value               = (_channel), \
@@ -47,7 +45,7 @@ extern unsigned int ath11k_ethernet_mode
 }
 
 /* frame mode values are mapped as per enum ath11k_hw_txrx_mode */
-static unsigned int ath11k_frame_mode = ATH11K_HW_TXRX_NATIVE_WIFI;
+unsigned int ath11k_frame_mode = ATH11K_HW_TXRX_ETHERNET;
 module_param_named(frame_mode, ath11k_frame_mode, uint, 0644);
 MODULE_PARM_DESC(frame_mode,
 		 "Datapath frame mode (0: raw, 1: native wifi (default), 2: ethernet)");
@@ -5290,7 +5288,8 @@ static int ath11k_mac_op_add_interface(s
 	 * 4addr related config during add_interface().
 	 */
 	if (!test_bit(ATH11K_FLAG_RAW_MODE, &ab->dev_flags) &&
-	    ath11k_ethernet_mode && (vif->type != NL80211_IFTYPE_MESH_POINT)) {
+	   (ath11k_frame_mode == ATH11K_HW_TXRX_ETHERNET) &&
+	   (vif->type != NL80211_IFTYPE_MESH_POINT)) {
 		param_id = WMI_VDEV_PARAM_RX_DECAP_TYPE;
 		param_value = ATH11K_HW_TXRX_ETHERNET;
 
