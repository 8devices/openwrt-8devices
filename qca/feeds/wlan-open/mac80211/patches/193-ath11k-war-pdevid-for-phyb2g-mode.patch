From 2c7950b7bdebbf986b18ad09e18a168bf5ddc3eb Mon Sep 17 00:00:00 2001
From: P Praneesh <ppranees@codeaurora.org>
Date: Tue, 16 Jun 2020 17:20:43 +0530
Subject: [PATCH] ath11k: war firmware pdevid for phyb2g hw mode

For phyb2g mode firmware sends pdevid 1 instead of
pdevid 2. since firmware changes are not yet merged
add this WAR for fixed pdevid 2 if hardware mode is PHYB2G.

Signed-off-by: P Praneesh <ppranees@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/wmi.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/drivers/net/wireless/ath/ath11k/wmi.c
+++ b/drivers/net/wireless/ath/ath11k/wmi.c
@@ -359,7 +359,11 @@ ath11k_pull_mac_phy_cap_svc_ready_ext(st
 
 	mac_phy_caps = wmi_mac_phy_caps + phy_idx;
 
-	pdev->pdev_id = mac_phy_caps->pdev_id;
+	if (hw_mode_id == WMI_HOST_HW_MODE_2G_PHYB)
+		pdev->pdev_id = WMI_HOST_PDEV_ID_2;
+	else
+		pdev->pdev_id = mac_phy_caps->pdev_id;
+
 	pdev_cap->supported_bands = mac_phy_caps->supported_bands;
 	pdev_cap->ampdu_density = mac_phy_caps->ampdu_density;
 
@@ -4313,8 +4317,7 @@ static int ath11k_wmi_tlv_dma_ring_caps(
 			goto free_dir_buff;
 		}
 
-		dir_buff_caps[i].pdev_id =
-				ab->sw_pdev_id_map[dma_caps[i].pdev_id - 1];
+		dir_buff_caps[i].pdev_id = dma_caps[i].pdev_id;
 		dir_buff_caps[i].id = dma_caps[i].module_id;
 		dir_buff_caps[i].min_elem = dma_caps[i].min_elem;
 		dir_buff_caps[i].min_buf_sz = dma_caps[i].min_buf_sz;
--- a/drivers/net/wireless/ath/ath11k/dbring.c
+++ b/drivers/net/wireless/ath/ath11k/dbring.c
@@ -172,7 +172,7 @@ int ath11k_dbring_buf_setup(struct ath11
 
 	ring->buf_sz = db_cap->min_buf_sz;
 	ring->buf_align = db_cap->min_buf_align;
-	ring->pdev_id = db_cap->pdev_id;
+	ring->pdev_id = ab->sw_pdev_id_map[db_cap->pdev_id - 1];
 	ring->hp_addr = ath11k_hal_srng_get_hp_addr(ar->ab, srng);
 	ring->tp_addr = ath11k_hal_srng_get_tp_addr(ar->ab, srng);
 
@@ -201,7 +201,7 @@ err:
 }
 
 int ath11k_dbring_get_cap(struct ath11k_base *ab,
-			  u8 pdev_idx,
+			  u32 pdev_id,
 			  enum wmi_direct_buffer_module id,
 			  struct ath11k_dbring_cap *db_cap)
 {
@@ -214,7 +214,7 @@ int ath11k_dbring_get_cap(struct ath11k_
 		return -EINVAL;
 
 	for (i = 0; i < ab->num_db_cap; i++) {
-		if (pdev_idx == ab->db_caps[i].pdev_id &&
+		if (pdev_id == ab->db_caps[i].pdev_id &&
 		    id == ab->db_caps[i].id) {
 			*db_cap = ab->db_caps[i];
 
--- a/drivers/net/wireless/ath/ath11k/dbring.h
+++ b/drivers/net/wireless/ath/ath11k/dbring.h
@@ -71,7 +71,7 @@ int ath11k_dbring_srng_setup(struct ath1
 int ath11k_dbring_buffer_release_event(struct ath11k_base *ab,
 				       struct ath11k_dbring_buf_release_event *ev);
 int ath11k_dbring_get_cap(struct ath11k_base *ab,
-			  u8 pdev_idx,
+			  u32 pdev_id,
 			  enum wmi_direct_buffer_module id,
 			  struct ath11k_dbring_cap *db_cap);
 void ath11k_dbring_srng_cleanup(struct ath11k *ar, struct ath11k_dbring *ring);
--- a/drivers/net/wireless/ath/ath11k/spectral.c
+++ b/drivers/net/wireless/ath/ath11k/spectral.c
@@ -993,7 +993,7 @@ int ath11k_spectral_init(struct ath11k_b
 		ar = ab->pdevs[i].ar;
 		sp = &ar->spectral;
 
-		ret = ath11k_dbring_get_cap(ar->ab, ar->pdev_idx,
+		ret = ath11k_dbring_get_cap(ar->ab, ar->pdev->pdev_id,
 					    WMI_DIRECT_BUF_SPECTRAL,
 					    &db_cap);
 		if (ret) {
