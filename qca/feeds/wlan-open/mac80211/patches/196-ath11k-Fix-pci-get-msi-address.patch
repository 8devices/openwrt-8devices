From f7cc8c318aaf15b8e2fc513d2b5106194ad6b1c8 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <periyasa@codeaurora.org>
Date: Fri, 26 Jun 2020 15:29:08 +0530
Subject: [PATCH] ath11k: Fix pci get msi address

Reset the high 32 bit address with zero. so it will work in 64 bit
build since q6 runs in 32 bit address.

Signed-off-by: Karthikeyan Periyasamy <periyasa@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/pci.c | 3 +++
 1 file changed, 3 insertions(+)

Index: backports-20200628-4.4.60-9a94b73e75/drivers/net/wireless/ath/ath11k/pci.c
===================================================================
--- backports-20200628-4.4.60-9a94b73e75.orig/drivers/net/wireless/ath/ath11k/pci.c
+++ backports-20200628-4.4.60-9a94b73e75/drivers/net/wireless/ath/ath11k/pci.c
@@ -453,13 +453,19 @@ int ath11k_pci_get_msi_irq(struct device
 int ath11k_pci_get_msi_address(struct ath11k_base *ab, u32 *msi_addr_lo,
 				u32 *msi_addr_hi)
 {
+	struct ath11k_pci *ar_pci = ath11k_pci_priv(ab);
 	struct pci_dev *pci_dev = to_pci_dev(ab->dev);
 
 	pci_read_config_dword(pci_dev, pci_dev->msi_cap + PCI_MSI_ADDRESS_LO,
 			      msi_addr_lo);
 
-	pci_read_config_dword(pci_dev, pci_dev->msi_cap + PCI_MSI_ADDRESS_HI,
-			      msi_addr_hi);
+	if (ar_pci->is_msi_64) {
+		pci_read_config_dword(pci_dev, pci_dev->msi_cap + PCI_MSI_ADDRESS_HI,
+				      msi_addr_hi);
+	} else {
+		*msi_addr_hi = 0;
+	}
+
 	return 0;
 }
 
@@ -943,6 +949,7 @@ static int ath11k_pci_claim(struct ath11
 {
 	u32 pci_dma_mask = PCI_DMA_MASK_64_BIT;
 	struct ath11k_base *ab = ar_pci->ab;
+	u16 control;
 	u16 device_id;
 	int ret = 0;
 
@@ -997,6 +1004,10 @@ static int ath11k_pci_claim(struct ath11
 	}
 
 	ath11k_dbg(ab, ATH11K_DBG_BOOT, "boot pci_mem 0x%pK\n", ar_pci->mem);
+
+	pci_read_config_word(pdev, pdev->msi_cap + PCI_MSI_FLAGS, &control);
+	ar_pci->is_msi_64 = !!(control & PCI_MSI_FLAGS_64BIT);
+
 	return 0;
 
 clear_master:
Index: backports-20200628-4.4.60-9a94b73e75/drivers/net/wireless/ath/ath11k/pci.h
===================================================================
--- backports-20200628-4.4.60-9a94b73e75.orig/drivers/net/wireless/ath/ath11k/pci.h
+++ backports-20200628-4.4.60-9a94b73e75/drivers/net/wireless/ath/ath11k/pci.h
@@ -80,6 +80,7 @@ struct ath11k_pci {
 	u16 dev_id;
 	u32 chip_id;
 	struct ath11k_msi_config *msi_config;
+	bool is_msi_64;
 	u32 msi_ep_base_data;
 	struct mhi_controller *mhi_ctrl;
 	unsigned long mhi_state;
