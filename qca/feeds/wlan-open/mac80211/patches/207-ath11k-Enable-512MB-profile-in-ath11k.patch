From 1b402e444ff99efe84d09a084b96c39826783a8e Mon Sep 17 00:00:00 2001
From: Ramya Gnanasekar <rgnanase@codeaurora.org>
Date: Thu, 10 Sep 2020 13:33:55 +0530
Subject: [PATCH] ath11k: Enable 512MB profile in ath11k

Below changes are made to enable 512MB mem mode in ath11k
        * Makefile changes to implement compilation flag when
                512MB mem profile is configured.
        * Enabling 512MB mem profile by default from Makefile
                for IPQ5018. This can be removed later once
                512MB profile config is supported.
        * Update target_mem_mode, number of stations, peer and vap
                during compile time

Signed-off-by: Ramya Gnanasekar <rgnanase@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/Kconfig |  7 +++++++
 drivers/net/wireless/ath/ath11k/hw.h    | 14 +++++++++++---
 drivers/net/wireless/ath/ath11k/qmi.c   |  2 +-
 drivers/net/wireless/ath/ath11k/qmi.h   |  6 +++++-
 4 files changed, 24 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/Kconfig
+++ b/drivers/net/wireless/ath/ath11k/Kconfig
@@ -77,3 +77,10 @@ config ATH11K_PKTLOG
 	and reception, rate information and ani state. The packet
 	log uses ring buffer to dump the data. The buffer size,
 	frame filters can be alterted by debugfs entries.
+
+config ATH11K_MEM_PROFILE_512M
+	bool "ath11k enable 512MB memory profile"
+	depends on ATH11K
+	default n
+	---help---
+	Enables 512MB memory profile for ath11k
--- a/drivers/net/wireless/ath/ath11k/hw.h
+++ b/drivers/net/wireless/ath/ath11k/hw.h
@@ -9,11 +9,22 @@
 #include "wmi.h"
 
 /* Target configuration defines */
+#ifdef CPTCFG_ATH11K_MEM_PROFILE_512M
 
+#define TARGET_NUM_VDEVS	8
+#define TARGET_NUM_PEERS_PDEV	(128 + TARGET_NUM_VDEVS)
+/* Max num of stations (per radio) */
+#define TARGET_NUM_STATIONS	128
+#define ATH11K_QMI_TARGET_MEM_MODE	ATH11K_QMI_TARGET_MEM_MODE_512M
+#else
 /* Num VDEVS per radio */
 #define TARGET_NUM_VDEVS	(16 + 1)
 
 #define TARGET_NUM_PEERS_PDEV	(512 + TARGET_NUM_VDEVS)
+/* Max num of stations (per radio) */
+#define TARGET_NUM_STATIONS	512
+#define ATH11K_QMI_TARGET_MEM_MODE	ATH11K_QMI_TARGET_MEM_MODE_DEFAULT
+#endif
 
 /* Num of peers for Single Radio mode */
 #define TARGET_NUM_PEERS_SINGLE		(TARGET_NUM_PEERS_PDEV)
@@ -24,9 +35,6 @@
 /* Num of peers for DBS_SBS */
 #define TARGET_NUM_PEERS_DBS_SBS	(3 * TARGET_NUM_PEERS_PDEV)
 
-/* Max num of stations (per radio) */
-#define TARGET_NUM_STATIONS	512
-
 #define TARGET_NUM_PEERS(x)	TARGET_NUM_PEERS_##x
 #define TARGET_NUM_PEER_KEYS	2
 #define TARGET_NUM_TIDS(x)	(2 * TARGET_NUM_PEERS(x) + \
--- a/drivers/net/wireless/ath/ath11k/qmi.c
+++ b/drivers/net/wireless/ath/ath11k/qmi.c
@@ -3750,7 +3750,7 @@ int ath11k_qmi_init_service(struct ath11
 	memset(&ab->qmi.target_mem, 0, sizeof(struct target_mem_chunk));
 	ab->qmi.ab = ab;
 
-	ab->qmi.target_mem_mode = ATH11K_QMI_TARGET_MEM_MODE_DEFAULT;
+	ab->qmi.target_mem_mode = ATH11K_QMI_TARGET_MEM_MODE;
 	ret = qmi_handle_init(&ab->qmi.handle, ATH11K_QMI_RESP_LEN_MAX,
 			      &ath11k_qmi_ops, ath11k_qmi_msg_handlers);
 	if (ret < 0) {
--- a/drivers/net/wireless/ath/ath11k/qmi.h
+++ b/drivers/net/wireless/ath/ath11k/qmi.h
@@ -45,11 +45,15 @@
 
 #define QMI_WLANFW_MAX_DATA_SIZE_V01		6144
 #define ATH11K_FIRMWARE_MODE_OFF		4
-#define ATH11K_QMI_TARGET_MEM_MODE_DEFAULT	0
 #define ATH11K_COLD_BOOT_FW_RESET_DELAY         (60 * HZ)
 
 struct ath11k_base;
 
+enum ath11k_target_mem_mode {
+	ATH11K_QMI_TARGET_MEM_MODE_DEFAULT = 0,
+	ATH11K_QMI_TARGET_MEM_MODE_512M,
+};
+
 enum ath11k_qmi_file_type {
 	ATH11K_QMI_FILE_TYPE_BDF_GOLDEN,
 	ATH11K_QMI_FILE_TYPE_CALDATA = 2,
--- a/local-symbols
+++ b/local-symbols
@@ -135,6 +135,7 @@ ATH11K=
 ATH11K_AHB=
 ATH11K_PCI=
 ATH11K_NSS_SUPPORT=
+ATH11K_MEM_PROFILE_512M=
 ATH11K_DEBUG=
 ATH11K_DEBUGFS=
 ATH11K_TRACING=
