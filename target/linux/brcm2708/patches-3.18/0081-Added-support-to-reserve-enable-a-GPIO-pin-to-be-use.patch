From 47a2d8098a9523435aec2fff1389ae92fd8791a9 Mon Sep 17 00:00:00 2001
From: Timo Kokkonen <tjko@iki.fi>
Date: Wed, 29 Oct 2014 23:30:30 -0700
Subject: [PATCH 081/114] Added support to reserve/enable a GPIO pin to be used
 from pps-gpio module (LinuxPPS). Enable PPS modules in default config for
 RPi.

---
 arch/arm/mach-bcm2708/bcm2708.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

--- a/arch/arm/mach-bcm2708/bcm2708.c
+++ b/arch/arm/mach-bcm2708/bcm2708.c
@@ -37,6 +37,7 @@
 #include <linux/spi/spi.h>
 #include <linux/gpio/machine.h>
 #include <linux/w1-gpio.h>
+#include <linux/pps-gpio.h>
 
 #include <linux/version.h>
 #include <linux/clkdev.h>
@@ -93,6 +94,7 @@ static unsigned disk_led_active_low = 1;
 static unsigned reboot_part = 0;
 static unsigned w1_gpio_pin = W1_GPIO;
 static unsigned w1_gpio_pullup = W1_PULLUP;
+static int pps_gpio_pin = -1;
 static bool vc_i2c_override = false;
 
 static unsigned use_dt = 0;
@@ -274,6 +276,19 @@ static struct platform_device w1_device
 };
 #endif
 
+static struct pps_gpio_platform_data pps_gpio_info = {
+	.assert_falling_edge = false,
+	.capture_clear = false,
+	.gpio_pin = -1,
+	.gpio_label = "PPS",
+};
+
+static struct platform_device pps_gpio_device = {
+	.name = "pps-gpio",
+	.id = PLATFORM_DEVID_NONE,
+	.dev.platform_data = &pps_gpio_info,
+};
+
 static u64 fb_dmamask = DMA_BIT_MASK(DMA_MASK_BITS_COMMON);
 
 static struct platform_device bcm2708_fb_device = {
@@ -841,6 +856,16 @@ void __init bcm2708_init(void)
 #ifdef CONFIG_BCM2708_GPIO
 	bcm_register_device_dt(&bcm2708_gpio_device);
 #endif
+
+#if defined(CONFIG_PPS_CLIENT_GPIO) || defined(CONFIG_PPS_CLIENT_GPIO_MODULE)
+	if (!use_dt && (pps_gpio_pin >= 0)) {
+		pr_info("bcm2708: GPIO %d setup as pps-gpio device\n", pps_gpio_pin);
+		pps_gpio_info.gpio_pin = pps_gpio_pin;
+		pps_gpio_device.id = pps_gpio_pin;
+		bcm_register_device(&pps_gpio_device);
+	}
+#endif
+
 #if defined(CONFIG_W1_MASTER_GPIO) || defined(CONFIG_W1_MASTER_GPIO_MODULE)
 	w1_gpio_pdata.pin = w1_gpio_pin;
 	w1_gpio_pdata.ext_pullup_enable_pin = w1_gpio_pullup;
@@ -1101,5 +1126,7 @@ module_param(disk_led_active_low, uint,
 module_param(reboot_part, uint, 0644);
 module_param(w1_gpio_pin, uint, 0644);
 module_param(w1_gpio_pullup, uint, 0644);
+module_param(pps_gpio_pin, int, 0644);
+MODULE_PARM_DESC(pps_gpio_pin, "Set GPIO pin to reserve for PPS");
 module_param(vc_i2c_override, bool, 0644);
 MODULE_PARM_DESC(vc_i2c_override, "Allow the use of VC's I2C peripheral.");
